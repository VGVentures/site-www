name: build

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches:
      # - master
      - rearch
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 0"

env:
  # Keep for Dart SDK reporting
  PUB_ENVIRONMENT: bot.github
  NODE_VERSION: 16

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - channel: dev
            experimental: false
          - channel: beta
            experimental: false
          - channel: stable
            experimental: false 
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Test examples against channel
        run: DART_CHANNEL=${{ matrix.channel }} make test
        continue-on-error: ${{ matrix.experimental }}

  deploy:
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/master' && 
      github.repository == 'dart-lang/site-www'
    needs:
      - test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: make build
      - run: make deploy-ci
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  stage:
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/rearch' && 
      github.repository == 'VGVentures/dart-site-www'
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT: dash-site-dev
      FIREBASE_CHANNEL: dart
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: dpkg --print-architecture
      - run: tool/fetch-dart-sdk-sums.sh
      - run: make build
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install -g firebase-tools concurrently linkinator
      - run: npm run checklinks
      - run: make stage
