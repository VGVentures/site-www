name: build

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches:
      # - master
      - rearch
  pull_request:
    branches:
      - master
  schedule:
    - cron: "0 0 * * 0"

env:
  # Keep for Dart SDK reporting
  PUB_ENVIRONMENT: bot.github

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - channel: dev
            experimental: false
          - channel: beta
            experimental: false
          - channel: stable
            experimental: false 
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Test examples against channel
        run: DART_CHANNEL=${{ matrix.channel }} make test
        continue-on-error: ${{ matrix.experimental }}

  deploy:
    needs:
      - test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/master' && 
      github.repository == 'dart-lang/site-www'
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - run: make build
      - run: make deploy-ci
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}

  stage:
    needs:
      - test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' && 
      github.ref == 'refs/heads/rearch' && 
      github.repository == 'VGVentures/dart-site-www'
    steps:
      - uses: actions/checkout@v2
      - run: printf "\n\nARCH: $(uname -p)\n\n"
      - run: tool/fetch-dart-sdk-sums.sh
        # with:
        #   submodules: recursive
      # - run: make build
      # - run: make stage
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #     FIREBASE_PROJECT: vgv
      #     FIREBASE_CHANNEL: dart


  # TODO what is this for?
  # I think this should be replaced by staging locally for someone
  # deploy_preview:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: '${{ github.event.pull_request.head.repo.full_name == github.repository }}'
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         submodules: recursive
  #     # TODO do we need this?
  #     - run: mkdir -p $TMP
  #     - uses: FirebaseExtended/action-hosting-deploy@0e16177d01e10c4560245404f959e75a9c633533
  #       with:
  #         repoToken: '${{ secrets.GITHUB_TOKEN }}'
  #         firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DART_DEV }}'
  #         projectId: dart-dev
